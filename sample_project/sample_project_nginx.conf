# [:SAMPLE_PROJECT:].conf

map $uri $protocolo {
    default "http";
    ~^/admin/ "https";
    ~^/xadmin/ "https";
}

# the upstream component nginx needs to connect to
upstream django_[:SAMPLE_PROJECT:] {
    server unix://[:PROJECT_DIR:]/[:SAMPLE_PROJECT:].sock; # for a file socket
}

server {
    # the port your site will be served on
    listen      80;
    listen      [:MY_IP:]:443 ssl;
    # the domain name it will serve for
    server_name [:MAIN_DOMAIN:];
    #if ($http_host != [:MAIN_DOMAIN:]) {
    #    rewrite  ^ $scheme://[:MAIN_DOMAIN:]$request_uri? permanent;
    #}
    charset     utf-8;

    gzip    on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;

    ssl_certificate    /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;
    ssl_prefer_server_ciphers On;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "EECDH+AESGCM:AES256+EECDH:ECDHE-RSA-AES128-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA128:ECDHE-RSA-AES128-SHA384:ECDHE-RSA-AES128-SHA128:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4:!DH";
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    access_log /var/log/nginx/[:SAMPLE_PROJECT:].access;
    error_log /var/log/nginx/[:SAMPLE_PROJECT:].error error;

    #if ($request_uri !~ "^(.*)\.pdf$")
    #{
    rewrite ^([^.]*[^/])$ $1/ permanent;
    #}

    # max upload size
    client_max_body_size 10M;   # adjust to taste

    # Django media
    location /media  {
        expires       7d;
        alias [:PROJECT_DIR:]/media;  # your Django project's media files - amend as required
        error_page 404 502 = @django;
    }

    location /static {
        expires       7d;
        alias [:PROJECT_DIR:]/static; # your Django project's static files - amend as required
        error_page 404 502 = @django;
    }

    #proxy_intercept_errors on;
    #uwsgi_intercept_errors on;
    recursive_error_pages on;
    #error_page 500 502 503 504 @error500;

    location @error500 {
        root [:PROJECT_DIR:]/error;
        internal;
        rewrite ^(.*)$ /500.html break;
    }

    location / {
        #auth_basic "Restricted";                                #For Basic Auth
        #auth_basic_user_file /etc/nginx/.htpasswd;              #For Basic Auth

        expires       -1;
        add_header    Cache-Control no-cache;
        add_header    Vary User-Agent;
        add_header Strict-Transport-Security "max-age=31536000";
        include     /etc/nginx/uwsgi_params;
        if ($request_method = POST) {
            uwsgi_pass  django_[:SAMPLE_PROJECT:];
        }
        if ($http_cookie !~* "cookie_warning") {
            uwsgi_pass  django_[:SAMPLE_PROJECT:];
        }
        if ($http_cookie ~* "cache") {
            uwsgi_pass  django_[:SAMPLE_PROJECT:];
        }
        default_type  "text/html; charset=utf-8";
        set $memcached_key "/[:SAMPLE_PROJECT:]:1:-$uri$args";
        memcached_pass 127.0.0.1:11211;
        # memcached_pass unix://[:PROJECT_DIR:]/memcached.sock;
        error_page 404 502 = @django;
    }

    location @django {
        expires       -1;
        add_header    Cache-Control no-cache;
        add_header    Vary User-Agent;
        include     /etc/nginx/uwsgi_params;
        uwsgi_pass  django_[:SAMPLE_PROJECT:];
        internal;
    }
}