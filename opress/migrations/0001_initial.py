# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-05-24 17:29
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import filebrowser.fields
import mptt.fields
import photologue.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('photologue', '0002_photosize_data'),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Agenda',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=300, verbose_name='T\xedtulo')),
                ('slug', models.SlugField(unique=True, verbose_name='url')),
                ('fecha_inicio', models.DateField(db_index=True, verbose_name='Fecha de inicio')),
                ('fecha_fin', models.DateField(db_index=True, verbose_name='Fecha de fin')),
                ('entradilla', models.TextField(blank=True, null=True, verbose_name='Entradilla')),
                ('contenido', models.TextField(blank=True, null=True, verbose_name='Contenido')),
                ('publicado', models.BooleanField(default=True, verbose_name='Publicado')),
                ('se_anuncia', models.BooleanField(default=False, verbose_name='\xbfSe anuncia?')),
                ('inicio_anuncio', models.DateField(blank=True, default=datetime.datetime.now, null=True, verbose_name='Fecha de inicio del anuncio')),
                ('fin_anuncio', models.DateField(blank=True, null=True, verbose_name='Fecha de fin del anuncio')),
                ('es_periodico', models.BooleanField(default=False, verbose_name='\xbfEs un evento peri\xf3dico?')),
                ('lunes', models.BooleanField(default=False)),
                ('martes', models.BooleanField(default=False)),
                ('miercoles', models.BooleanField(default=False)),
                ('jueves', models.BooleanField(default=False)),
                ('viernes', models.BooleanField(default=False)),
                ('sabado', models.BooleanField(default=False)),
                ('domingo', models.BooleanField(default=False)),
                ('fecha_publicacion', models.DateField(blank=True, db_index=True, default=datetime.date.today, verbose_name='Fecha de publicaci\xf3n')),
                ('share_id', models.CharField(blank=True, max_length=36, null=True, unique=True)),
                ('icono', photologue.fields.PhotoField(blank=True, image_size=b'agenda_icono', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='agenda_iconos_set', to='photologue.Photo', verbose_name='Icono 90x90px')),
                ('imagen', photologue.fields.PhotoField(blank=True, image_size=b'agenda_imagen', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='agenda_imagenes_set', to='photologue.Photo', verbose_name='Imagen 730x300px')),
            ],
            options={
                'ordering': ['fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='AgendaFechaExcluida',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('agenda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='opress.Agenda', verbose_name='Evento')),
            ],
        ),
        migrations.CreateModel(
            name='AparicionPrensa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(db_index=True, default=django.utils.timezone.now, verbose_name='Fecha')),
                ('titulo', models.CharField(max_length=300, verbose_name='T\xedtulo')),
                ('medio', models.CharField(max_length=300, verbose_name='Medio')),
                ('enlace', models.CharField(blank=True, max_length=500, null=True, verbose_name='Enlace (URL)')),
                ('archivo', filebrowser.fields.FileBrowseField(blank=True, max_length=300, null=True, verbose_name='Archivo PDF')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripci\xf3n')),
                ('icono', photologue.fields.PhotoField(blank=True, image_size=b'prensa_icono', null=True, on_delete=django.db.models.deletion.SET_NULL, to='photologue.Photo', verbose_name='Icono 200x120px')),
            ],
            options={
                'ordering': ['fecha'],
                'verbose_name': 'aparici\xf3n en prensa',
                'verbose_name_plural': 'apariciones en prensa',
            },
        ),
        migrations.CreateModel(
            name='Articulo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=300, verbose_name='T\xedtulo')),
                ('slug', models.SlugField(verbose_name='url')),
                ('subtitulo', models.CharField(blank=True, max_length=3000, null=True, verbose_name='Subt\xedtulo')),
                ('contenido', models.TextField(verbose_name='Contenido')),
                ('fecha', models.DateField(db_index=True, default=datetime.datetime.now, verbose_name='Fecha')),
                ('inicio', models.DateField(blank=True, db_index=True, null=True, verbose_name='Fecha de publicaci\xf3n')),
                ('es_portada', models.BooleanField(default=False, verbose_name='\xbfAparece en la portada?')),
                ('es_destacado', models.BooleanField(default=False, verbose_name='\xbfHay que destacarlo?')),
            ],
            options={
                'verbose_name': 'Art\xedculo',
            },
        ),
        migrations.CreateModel(
            name='AutorArticulo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=300, verbose_name='Nombre y apellidos')),
                ('lugar', models.CharField(blank=True, max_length=300, null=True, verbose_name='Lugar')),
                ('foto', photologue.fields.PhotoField(blank=True, image_size=b'autor_articulo_foto', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='autorarticulo_fotos_set', to='photologue.Photo', verbose_name='Foto 330x207px')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutorBlog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=300, verbose_name='Nombre y apellidos')),
                ('email', models.EmailField(max_length=254, verbose_name='Correo electr\xf3nico')),
                ('curriculum', models.TextField(blank=True, verbose_name='Curr\xedculum')),
                ('foto', photologue.fields.PhotoField(blank=True, image_size=b'blog_imagen', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='autorblog_fotos_set', to='photologue.Photo', verbose_name='Foto 480x320px')),
            ],
            options={
                'ordering': ['nombre'],
                'verbose_name': 'autor de blog',
                'verbose_name_plural': 'autores de blogs',
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=300, verbose_name='T\xedtulo')),
                ('subtitulo', models.TextField(blank=True, null=True, verbose_name='Subt\xedtulo')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripci\xf3n')),
                ('url', models.CharField(max_length=500)),
                ('codigo_urchin', models.CharField(blank=True, max_length=30, null=True, verbose_name='C\xf3digo Urchin')),
                ('tiene_categorias', models.BooleanField(default=False, verbose_name='\xbfTiene categor\xedas?')),
                ('es_colectivo', models.BooleanField(default=False, verbose_name='\xbfEs colectivo?')),
                ('multiidioma', models.BooleanField(default=False, verbose_name='\xbfEs multiidioma?')),
                ('tiene_destacados', models.BooleanField(default=False, verbose_name='\xbfTiene destacados?')),
                ('gplus_profile', models.CharField(blank=True, max_length=500, null=True, verbose_name='Enlace al perfil de Google+')),
                ('subdominio', models.CharField(max_length=500)),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='opress.AutorBlog', verbose_name='Autor')),
                ('imagen', photologue.fields.PhotoField(blank=True, image_size=b'blog_imagen', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blog_imagenes_set', to='photologue.Photo', verbose_name='Imagen 480x320px')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario del Kit')),
            ],
            options={
                'permissions': (('admin_blogs', 'Can manage all blogs'),),
            },
        ),
        migrations.CreateModel(
            name='Bloque',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('', '-- Seleccione un tipo de bloque --'), ('html', 'Contenido libre (HTML)'), ('image', 'Imagen'), ('card', 'Ficha (imagen + HTML)'), ('timeline', 'Timeline'), ('flickr', '\xc1lbum de Flickr'), ('youtube', 'V\xeddeo de youtube'), ('map', 'Mapa de Google')], max_length=15, verbose_name='Tipo de bloque')),
                ('titulo', models.CharField(blank=True, max_length=300, null=True, verbose_name='T\xedtulo')),
                ('enlace', models.CharField(blank=True, max_length=500, null=True, verbose_name='Enlace (URL)')),
                ('contenido', models.TextField(blank=True, null=True)),
                ('flickr_album', models.CharField(blank=True, max_length=30, null=True, verbose_name='Id del \xe1lbum (Flickr)')),
                ('youtube_id', models.CharField(blank=True, max_length=500, null=True, verbose_name='Id o url del v\xeddeo (Youtube)')),
                ('se_hereda', models.BooleanField(default=False)),
                ('grupo', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'bloque',
            },
        ),
        migrations.CreateModel(
            name='Boletin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=300, verbose_name='Nombre')),
                ('fecha_inicio', models.DateField(db_index=True, verbose_name='Fecha de inicio')),
                ('fecha_fin', models.DateField(blank=True, db_index=True, default=django.utils.timezone.now, null=True, verbose_name='Fecha de fin')),
                ('cabecera', models.TextField(blank=True)),
                ('pie', models.TextField(blank=True)),
                ('imagen', photologue.fields.PhotoField(blank=True, image_size=b'portada_destacado', null=True, on_delete=django.db.models.deletion.SET_NULL, to='photologue.Photo', verbose_name='Imagen 1040x356px')),
            ],
            options={
                'ordering': ['fecha_inicio'],
                'verbose_name': 'bolet\xedn',
                'verbose_name_plural': 'boletines',
            },
        ),
        migrations.CreateModel(
            name='CategoriaDocumento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=300, verbose_name='Nombre')),
                ('slug', models.SlugField(verbose_name='url')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
            ],
            options={
                'verbose_name': 'categor\xeda de documentos',
                'verbose_name_plural': 'categor\xedas de documentos',
            },
        ),
        migrations.CreateModel(
            name='Destacado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=300, verbose_name='T\xedtulo')),
                ('entradilla', models.TextField(blank=True)),
                ('enlace', models.CharField(blank=True, max_length=500, null=True, verbose_name='Enlace (URL)')),
                ('visible', models.BooleanField(default=True, verbose_name='Visible en la portada')),
                ('fecha', models.DateField(blank=True, null=True, verbose_name='Fecha de publicaci\xf3n')),
                ('seccion', models.CharField(blank=True, max_length=100, null=True, verbose_name='Secci\xf3n')),
                ('ventana_nueva', models.BooleanField(default=True, verbose_name='Se abre en ventana nueva')),
                ('imagen', photologue.fields.PhotoField(image_size=b'portada_destacado', on_delete=django.db.models.deletion.PROTECT, to='photologue.Photo', verbose_name='Imagen 1040x356px')),
            ],
            options={
                'ordering': ['titulo'],
            },
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=300, verbose_name='Nombre')),
                ('slug', models.SlugField(verbose_name='url')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Entradilla')),
                ('fecha', models.DateField(blank=True, default=datetime.datetime.now, verbose_name='Fecha')),
                ('archivo', filebrowser.fields.FileBrowseField(blank=True, max_length=300, null=True, verbose_name='Archivo PDF')),
                ('scribd_id', models.CharField(blank=True, max_length=30, null=True, verbose_name='ID de Scribd')),
                ('contenido', models.TextField(blank=True, null=True)),
                ('categoria', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='opress.CategoriaDocumento', verbose_name='Categor\xeda')),
                ('icono', photologue.fields.PhotoField(blank=True, image_size=b'documento_icono', null=True, on_delete=django.db.models.deletion.SET_NULL, to='photologue.Photo', verbose_name='Icono 300x187px')),
            ],
        ),
        migrations.CreateModel(
            name='FlickrUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=20, verbose_name='Identificador (xxxxxxxx@xxx)')),
                ('nombre', models.CharField(max_length=300, verbose_name='Nombre')),
            ],
            options={
                'ordering': ['nombre'],
                'verbose_name': 'usuario de Flickr',
                'verbose_name_plural': 'usuarios de Flickr',
            },
        ),
        migrations.CreateModel(
            name='GoogleMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=300, verbose_name='Nombre')),
                ('codigo', models.CharField(max_length=300, verbose_name='Identificador')),
            ],
            options={
                'verbose_name': 'mapa de Google',
                'verbose_name_plural': 'mapas de Google',
            },
        ),
        migrations.CreateModel(
            name='HierarchicalTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='opress.HierarchicalTag', verbose_name='Pertenece a')),
            ],
            options={
                'verbose_name': 'etiqueta',
            },
        ),
        migrations.CreateModel(
            name='IPUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_addr', models.GenericIPAddressField(verbose_name='IP')),
                ('publish', models.BooleanField(default=True, verbose_name='\xbfPublicar?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Usuarios-IP',
            },
        ),
        migrations.CreateModel(
            name='LocationTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Localidad',
                'verbose_name_plural': 'Localidades',
            },
        ),
        migrations.CreateModel(
            name='LocationTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(db_index=True, verbose_name='Object id')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opress_locationtags_tagged_items', to='contenttypes.ContentType', verbose_name='Content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='localidad', to='opress.LocationTag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Mensaje',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remitente', models.EmailField(max_length=254, verbose_name='Correo electr\xf3nico')),
                ('fecha', models.DateTimeField(default=datetime.datetime.now, verbose_name='Fecha')),
                ('texto', models.TextField()),
                ('destinatario', models.CharField(max_length=300, verbose_name='Destinatario')),
                ('ip_origen', models.CharField(max_length=100, null=True, verbose_name='IP de origen')),
            ],
        ),
        migrations.CreateModel(
            name='Multimedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(db_index=True, default=django.utils.timezone.now, verbose_name='Fecha')),
                ('titulo', models.CharField(max_length=300, verbose_name='T\xedtulo')),
                ('identificador', models.CharField(max_length=500, verbose_name='Identificador (ID)')),
                ('icono', models.CharField(blank=True, max_length=500, null=True, verbose_name='Icono (URL)')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripci\xf3n')),
                ('duracion', models.CharField(blank=True, max_length=500, null=True, verbose_name='Duraci\xf3n')),
                ('es_recurso', models.BooleanField(default=False, verbose_name='\xbfEs recurso?')),
                ('es_portada', models.BooleanField(default=False, verbose_name='\xbfAparece en la portada (estudio/verdad)?')),
            ],
            options={
                'ordering': ['-fecha'],
                'verbose_name': 'contenido multimedia',
                'verbose_name_plural': 'contenidos multimedia',
            },
        ),
        migrations.CreateModel(
            name='Noticia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=300, verbose_name='T\xedtulo')),
                ('slug', models.SlugField(unique=True, verbose_name='url')),
                ('fecha', models.DateField(blank=True, db_index=True, default=datetime.datetime.now, verbose_name='Fecha')),
                ('entradilla', models.TextField(verbose_name='Entradilla')),
                ('contenido', models.TextField(verbose_name='Contenido')),
                ('publicado', models.BooleanField(default=True, verbose_name='Publicado')),
                ('share_id', models.CharField(blank=True, max_length=36, null=True, unique=True)),
                ('icono', photologue.fields.PhotoField(image_size=b'noticias_icono_portada', on_delete=django.db.models.deletion.PROTECT, related_name='noticias_iconos_set', to='photologue.Photo', verbose_name='Icono 300x187px')),
                ('imagen', photologue.fields.PhotoField(blank=True, image_size=b'noticia_imagen', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='noticias_imagenes_set', to='photologue.Photo', verbose_name='Imagen 730x300px de ancho')),
            ],
            options={
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='OtroArticulo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=300, verbose_name='T\xedtulo')),
                ('subtitulo', models.CharField(blank=True, max_length=3000, null=True, verbose_name='Subt\xedtulo')),
                ('autor', models.CharField(blank=True, max_length=300, null=True, verbose_name='Autor')),
                ('fecha', models.DateField(null=True, verbose_name='Fecha')),
                ('url', models.CharField(max_length=500)),
                ('guid', models.CharField(max_length=500)),
                ('imagen', models.CharField(blank=True, max_length=500, null=True, verbose_name='Imagen (URL)')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripci\xf3n')),
            ],
        ),
        migrations.CreateModel(
            name='OtroBlog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=300, verbose_name='T\xedtulo')),
                ('autor', models.CharField(max_length=300, verbose_name='Autor')),
                ('tipo', models.PositiveIntegerField(choices=[(1, 'Blogs en dominicos.org'), (2, 'Blogs en p\xe1ginas dominicanas'), (3, 'Otros blogs')], verbose_name='Tipo de blog')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripci\xf3n')),
                ('url', models.CharField(max_length=500)),
                ('rss', models.CharField(blank=True, max_length=500, null=True)),
                ('suscripcion_correo', models.CharField(blank=True, max_length=1000, null=True)),
                ('blog', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='opress.Blog', verbose_name='Blog')),
                ('imagen', photologue.fields.PhotoField(blank=True, image_size=b'otro_blog_imagen', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='otroblog_imagenes_set', to='photologue.Photo', verbose_name='Imagen 152x140px')),
            ],
        ),
        migrations.CreateModel(
            name='Pagina',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100, verbose_name='T\xedtulo')),
                ('slug', models.SlugField(max_length=250, verbose_name='url')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripci\xf3n')),
                ('contenido', models.TextField(blank=True)),
                ('in_menu', models.BooleanField(default=True, verbose_name='\xbfEst\xe1 en el men\xfa?')),
                ('menu', models.CharField(blank=True, max_length=300, verbose_name='Men\xfa')),
                ('template_url', models.CharField(blank=True, max_length=300, verbose_name='URL Plantilla')),
                ('es_seccion', models.BooleanField(default=False, verbose_name='\xbfEs secci\xf3n?')),
                ('url', models.CharField(default='', max_length=1000, verbose_name='Url')),
                ('tiene_menu_bloque', models.BooleanField(default=False, verbose_name='\xbfTiene bloque de men\xfa?')),
                ('head_title', models.CharField(blank=True, max_length=200, null=True, verbose_name='T\xedtulo para SEO')),
                ('meta_description', models.CharField(blank=True, max_length=300, null=True, verbose_name='META description para SEO')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('icono', photologue.fields.PhotoField(blank=True, image_size=b'pagina_icono', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paginas_iconos_set', to='photologue.Photo', verbose_name='Icono 330x207px')),
                ('imagen_cabecera', photologue.fields.PhotoField(blank=True, image_size=b'pagina_cabecera', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paginas_cabeceras_set', to='photologue.Photo', verbose_name='Imagen cabecera 730x300px')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='opress.Pagina', verbose_name='Pertenece a')),
            ],
            options={
                'verbose_name': 'p\xe1gina',
                'verbose_name_plural': 'p\xe1ginas',
            },
        ),
        migrations.CreateModel(
            name='ProveedorMultimedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('identificador', models.CharField(blank=True, max_length=500, null=True, verbose_name='Identificador (ID)')),
                ('clave', models.CharField(blank=True, max_length=500, null=True, verbose_name='Clave de la API')),
                ('tipo', models.CharField(max_length=100, verbose_name='Tipo')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'proveedor de contenidos multimedia',
                'verbose_name_plural': 'proveedores de contenidos multimedia',
            },
        ),
        migrations.CreateModel(
            name='PublicacionSitio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(verbose_name='contenido relacionado')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='tipo de contenido')),
            ],
        ),
        migrations.CreateModel(
            name='PuntoGoogleMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=300, verbose_name='Nombre')),
                ('enlace', models.CharField(max_length=2000, verbose_name='Enlace')),
                ('tipo', models.CharField(choices=[('m', 'Mapa'), ('k', 'Sat\xe9lite'), ('h', 'H\xedbrido'), ('p', 'Terreno'), ('e', 'Google Earth')], default='m', max_length=1, verbose_name='Tipo de mapa')),
                ('mapa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='opress.GoogleMap', verbose_name='Mapa')),
            ],
            options={
                'verbose_name': 'punto en mapa de Google',
                'verbose_name_plural': 'puntos en mapa de Google',
            },
        ),
        migrations.CreateModel(
            name='Recurso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('', '-- Seleccione un tipo de recurso --'), ('v\xeddeo', 'V\xeddeo (Youtube)'), ('audio', 'Audio (Soundcloud)'), ('libro', 'Libro (URL)'), ('resena', 'Rese\xf1a de libro'), ('documento', 'Documento (URL)')], max_length=15, verbose_name='Tipo de recurso')),
                ('fecha', models.DateField(db_index=True, default=django.utils.timezone.now, verbose_name='Fecha')),
                ('titulo', models.CharField(max_length=300, verbose_name='T\xedtulo')),
                ('slug', models.SlugField(unique=True, verbose_name='url')),
                ('isbn', models.CharField(blank=True, max_length=30, null=True, verbose_name='ISBN')),
                ('enlace', models.CharField(blank=True, max_length=500, null=True, verbose_name='Enlace (URL)')),
                ('archivo', filebrowser.fields.FileBrowseField(blank=True, max_length=300, null=True, verbose_name='Archivo PDF')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripci\xf3n')),
                ('contenido', models.TextField(blank=True, null=True, verbose_name='Contenido')),
                ('autor', models.CharField(blank=True, max_length=300, null=True, verbose_name='Autor')),
                ('es_portada', models.BooleanField(default=False, verbose_name='\xbfAparece en la portada?')),
                ('articulo_blog', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='opress.Articulo', verbose_name='Art\xedculo de blog')),
                ('icono', photologue.fields.PhotoField(image_size=b'recurso_icono', on_delete=django.db.models.deletion.CASCADE, to='photologue.Photo', verbose_name='Icono tama\xf1o variable')),
                ('multimedia', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='opress.Multimedia', verbose_name='Contenido multimedia')),
            ],
            options={
                'ordering': ['fecha'],
                'verbose_name': 'recurso',
                'verbose_name_plural': 'recursos',
            },
        ),
        migrations.CreateModel(
            name='SeccionBlog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=300, verbose_name='Nombre')),
                ('slug', models.SlugField(verbose_name='url')),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='opress.Blog', verbose_name='Blog')),
            ],
            options={
                'ordering': ['nombre'],
                'verbose_name': 'secci\xf3n de blog',
                'verbose_name_plural': 'secciones de blogs',
            },
        ),
        migrations.CreateModel(
            name='Sitio',
            fields=[
                ('site_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sites.Site')),
                ('db', models.CharField(blank=True, max_length=100, null=True)),
                ('token', models.CharField(blank=True, max_length=100, null=True)),
            ],
            bases=('sites.site',),
        ),
        migrations.CreateModel(
            name='TaggedContentItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opress_taggedcontentitem_tagged_items', to='contenttypes.ContentType', verbose_name='Content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='opress.HierarchicalTag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Timeline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=300, verbose_name='Nombre')),
                ('orientacion', models.CharField(choices=[('horizontal', 'Horizontal'), ('vertical', 'Vertical')], max_length=15, verbose_name='Orientaci\xf3n')),
                ('autoplay', models.BooleanField(default=False, verbose_name='Autoplay')),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='TimelineItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.CharField(max_length=30, verbose_name='Fecha')),
                ('titulo', models.CharField(max_length=300, verbose_name='T\xedtulo')),
                ('contenido', models.TextField(blank=True)),
                ('imagen', photologue.fields.PhotoField(blank=True, image_size=b'bloque_timeline', null=True, on_delete=django.db.models.deletion.SET_NULL, to='photologue.Photo', verbose_name='Imagen 140x110px')),
                ('timeline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='opress.Timeline', verbose_name='Timeline')),
            ],
            options={
                'ordering': ['fecha'],
            },
        ),
        migrations.CreateModel(
            name='TipoMensaje',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=300, verbose_name='Nombre')),
                ('destinatario', models.EmailField(max_length=254, verbose_name='Correo electr\xf3nico destinatario')),
            ],
            options={
                'verbose_name': 'tipo de mensaje',
                'verbose_name_plural': 'tipos de mensaje',
            },
        ),
        migrations.AddField(
            model_name='timeline',
            name='selected_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='timeline_selected', to='opress.TimelineItem', verbose_name='Fecha seleccionada'),
        ),
        migrations.AddField(
            model_name='recurso',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='opress.TaggedContentItem', to='opress.HierarchicalTag', verbose_name='Etiquetas'),
        ),
        migrations.AddField(
            model_name='publicacionsitio',
            name='sitio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='opress.Sitio', verbose_name='Sitio para publicar'),
        ),
        migrations.AddField(
            model_name='pagina',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='opress.TaggedContentItem', to='opress.HierarchicalTag', verbose_name='Etiquetas'),
        ),
        migrations.AddField(
            model_name='otroarticulo',
            name='blog',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='opress.OtroBlog', verbose_name='Blog'),
        ),
        migrations.AddField(
            model_name='noticia',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='opress.TaggedContentItem', to='opress.HierarchicalTag', verbose_name='Etiquetas'),
        ),
        migrations.AddField(
            model_name='multimedia',
            name='proveedor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='opress.ProveedorMultimedia', verbose_name='Proveedor de contenidos'),
        ),
        migrations.AddField(
            model_name='multimedia',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='opress.TaggedContentItem', to='opress.HierarchicalTag', verbose_name='Etiquetas'),
        ),
        migrations.AddField(
            model_name='mensaje',
            name='tipo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='opress.TipoMensaje', verbose_name='Tipo de mensaje'),
        ),
        migrations.AddField(
            model_name='destacado',
            name='pagina',
            field=models.ManyToManyField(to='opress.Pagina', verbose_name='P\xe1ginas en que se muestra'),
        ),
        migrations.AddField(
            model_name='categoriadocumento',
            name='pagina',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='opress.Pagina', verbose_name='P\xe1gina asociada'),
        ),
        migrations.AddField(
            model_name='categoriadocumento',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='opress.CategoriaDocumento', verbose_name='Pertenece a'),
        ),
        migrations.AddField(
            model_name='bloque',
            name='flickr_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='opress.FlickrUser', verbose_name='Usuario de Flickr'),
        ),
        migrations.AddField(
            model_name='bloque',
            name='icono',
            field=photologue.fields.PhotoField(blank=True, image_size=b'documento_icono', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bloques_iconos_set', to='photologue.Photo', verbose_name='Icono 300x187px'),
        ),
        migrations.AddField(
            model_name='bloque',
            name='imagen',
            field=photologue.fields.PhotoField(blank=True, image_size=b'bloque_ancho_completo', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bloques_imagenes_set', to='photologue.Photo', verbose_name='Banner 730x300px'),
        ),
        migrations.AddField(
            model_name='bloque',
            name='mapa',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='opress.PuntoGoogleMap', verbose_name='Mapa de Google'),
        ),
        migrations.AddField(
            model_name='bloque',
            name='noticia',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='opress.Noticia', verbose_name='Al final de la noticia'),
        ),
        migrations.AddField(
            model_name='bloque',
            name='paginas_cabecera',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bloques_cabecera', to='opress.Pagina', verbose_name='Al principio de la p\xe1gina'),
        ),
        migrations.AddField(
            model_name='bloque',
            name='paginas_pie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bloques_pie', to='opress.Pagina', verbose_name='Al final de la p\xe1gina'),
        ),
        migrations.AddField(
            model_name='bloque',
            name='timeline',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='opress.Timeline', verbose_name='Timeline'),
        ),
        migrations.AddField(
            model_name='articulo',
            name='autor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='opress.AutorArticulo', verbose_name='Autor'),
        ),
        migrations.AddField(
            model_name='articulo',
            name='blog',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='opress.Blog', verbose_name='Blog'),
        ),
        migrations.AddField(
            model_name='articulo',
            name='icono',
            field=photologue.fields.PhotoField(blank=True, image_size=b'blog_imagen', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articulos_iconos_set', to='photologue.Photo', verbose_name='Imagen 480x320px'),
        ),
        migrations.AddField(
            model_name='articulo',
            name='seccion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='opress.SeccionBlog', verbose_name='Secci\xf3n'),
        ),
        migrations.AddField(
            model_name='aparicionprensa',
            name='pagina',
            field=models.ManyToManyField(blank=True, to='opress.Pagina', verbose_name='P\xe1ginas en que se muestra'),
        ),
        migrations.AddField(
            model_name='agenda',
            name='localidad',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='opress.LocationTags', to='opress.LocationTag', verbose_name='Localidad'),
        ),
        migrations.AddField(
            model_name='agenda',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='opress.TaggedContentItem', to='opress.HierarchicalTag', verbose_name='Etiquetas'),
        ),
        migrations.AlterOrderWithRespectTo(
            name='pagina',
            order_with_respect_to='parent',
        ),
        migrations.AlterOrderWithRespectTo(
            name='hierarchicaltag',
            order_with_respect_to='parent',
        ),
        migrations.AlterOrderWithRespectTo(
            name='documento',
            order_with_respect_to='categoria',
        ),
        migrations.AlterOrderWithRespectTo(
            name='categoriadocumento',
            order_with_respect_to='parent',
        ),
    ]
